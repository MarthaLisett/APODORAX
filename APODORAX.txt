PROGRAMA ::= 'programa' 'id' ':' DECLARACION FUNCION 'inicio' BLOQUE 'fin'
DECLARACION ::= ('var' TIPO 'cteid' ';')*
ASIGNACION ::= ('id' ('[' EXP ']' |))'=' (EXP | LLAMADA) ';'
FUNCTION ::= 'funcion' TIPO_REGRESO 'id' '(' FUNCTIONPAM ')' BLOQUEFUN
FUNCTIONPAM ::= ('var' TIPO 'id' (',' FUNCTIONPAM)* |)
BLOQUEFUN ::= '{' DECLARACION* ESTATUTO* REGRESO '}'
BLOQUE ::= '{' ESTATUTO* '}' 
ESTATUTO ::= INGRESO | ESCRITURA | TEXTO | RECTANGULO | CIRCULO | OVALO | TRIANGULO | PUNTO | LINEA | CURVA | LLAMADA ';' | ASIGNACION | CONDICION | CICLO
NEGACION ::= ('no')?
EXPRESION ::= NEGACION EXP | NEGACION EXP COMPARACION EXP | COLOR
EXP ::= TERMINO | TERMINO '+' EXP | TERMINO '-' EXP
TERMINO ::= FACTOR | FACTOR '*' TERMINO | FACTOR '/' TERMINO 
FACTOR ::= '(' EXPRESION ')' | CTE
CTE ::= CTE_ID | 'c_entero' | 'c_flotante' | 'c_cadena' | 'c_caracter' | 'verdadero' | 'falso 
CTE_ID ::= 'id' | 'id' '[' EXP ']'| 'id' '(' EXP ')'
CONDICION ::= 'si' '(' EXPRESION ')' 'entonces' BLOQUE ( 'sino' 'entonces' BLOQUE | )
COMPARACION ::= '<' | '>' | '!=' | '==' | '<=' | '>=' | '&&' | '||'
PARAMETROS ::= 'var' TIPO 'id' | 'var' TIPO 'id' ',' PARAMETROS  
LLAMADA ::= 'id' '(' (LLAMADA2 |) ')' ';'
LLAMADA2 ::= EXPRESION | EXPRESION ',' LLAMADA2
COLOR ::= 'negro' | 'gris' | 'azul' | 'amarillo' | 'verde' | 'rojo'
CICLO ::= 'mientras' '('EXPRESION ')' BLOQUE 
ESCRITURA ::= 'desplegar' '(' ESCRITURA2 ')'  ';'
ESCRITURA2::= EXPRESION | EXPRESION ',' ESCRITURA2 
REGRESO ::= ('regresar' EXP ';' | )
TIPO_REGRESO ::= TIPO | 'vacio'
TIPO ::= 'cadena' | 'entero' | 'flotante' | 'bool' | 'caracter'
INGRESO ::= 'entrada' '(' INGRESO2 ')' ';'
INGRESO2 ::= CTE_ID | CTE_ID ',' INGRESO2
ARGS ::= EXPRESION | EXPRESION ',' ARGS
TEXTO ::= 'insertaTexto' '(' ARGS ')' ';'
RECTANGULO ::= 'insertaRectangulo' '(' ARGS ')' ';'
CIRCULO ::= 'insertaCirculo' '(' ARGS ')' ';'
OVALO ::= 'insertaOvalo' '(' ARGS ')' ';'
TRIANGULO ::= 'insertaTriangulo' '(' ARGS ')' ';'
PUNTO ::= 'insertaPunto' '(' ARGS ')' ';'
LINEA ::= 'insertaLinea' '('ARGS ')' ';'
CURVA ::= 'insertaCurva' '(' ARGS ')' ';'
